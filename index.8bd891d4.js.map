{"mappings":"ACEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAS,SAAS,aAAa,CAAC,WAChC,EAAO,SAAS,aAAa,CAAC,SAE9B,EAAc,SAAS,AADX,iBAAiB,GACI,WAAW,EAElD,GAAI,EAAE,MAAM,GAAK,GAIjB,IAAM,EAAW,EAAK,qBAAqB,GACrC,EAAe,EAAO,YAAY,CAElC,EAAQ,EAAE,OAAO,CAAG,EAAS,IAAI,CAAG,EAAc,EAAe,EACjE,EAAQ,EAAE,OAAO,CAAG,EAAS,GAAG,CAAG,EAAc,EAAe,EAEhE,EAAS,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,EAAG,GAAQ,EAAK,WAAW,CAAG,GACzD,EAAS,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,EAAG,GAAQ,EAAK,YAAY,CAAG,EAEhE,CAAA,EAAO,KAAK,CAAC,IAAI,CAAG,GAAU,MAAA,CAAP,EAAO,MAC9B,EAAO,KAAK,CAAC,GAAG,CAAG,GAAU,MAAA,CAAP,EAAO,MAC/B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"click\", function(e) {\n    var spider = document.querySelector(\".spider\");\n    var wall = document.querySelector(\".wall\");\n    var wallStyle = getComputedStyle(wall);\n    var borderWidth = parseInt(wallStyle.borderWidth);\n    if (e.target !== wall) return;\n    var wallRect = wall.getBoundingClientRect();\n    var spiderHeight = spider.clientHeight;\n    var cordX = e.clientX - wallRect.left - borderWidth - spiderHeight / 2;\n    var cordY = e.clientY - wallRect.top - borderWidth - spiderHeight / 2;\n    var finalX = Math.min(Math.max(0, cordX), wall.clientWidth - spiderHeight);\n    var finalY = Math.min(Math.max(0, cordY), wall.clientHeight - spiderHeight);\n    spider.style.left = \"\".concat(finalX, \"px\");\n    spider.style.top = \"\".concat(finalY, \"px\");\n});\n\n//# sourceMappingURL=index.8bd891d4.js.map\n","'use strict';\n\ndocument.addEventListener('click', (e) => {\n  const spider = document.querySelector('.spider');\n  const wall = document.querySelector('.wall');\n  const wallStyle = getComputedStyle(wall);\n  const borderWidth = parseInt(wallStyle.borderWidth);\n\n  if (e.target !== wall) {\n    return;\n  }\n\n  const wallRect = wall.getBoundingClientRect();\n  const spiderHeight = spider.clientHeight;\n\n  const cordX = e.clientX - wallRect.left - borderWidth - spiderHeight / 2;\n  const cordY = e.clientY - wallRect.top - borderWidth - spiderHeight / 2;\n\n  const finalX = Math.min(Math.max(0, cordX), wall.clientWidth - spiderHeight);\n  const finalY = Math.min(Math.max(0, cordY), wall.clientHeight - spiderHeight);\n\n  spider.style.left = `${finalX}px`;\n  spider.style.top = `${finalY}px`;\n});\n"],"names":["document","addEventListener","e","spider","querySelector","wall","borderWidth","parseInt","wallStyle","getComputedStyle","target","wallRect","getBoundingClientRect","spiderHeight","clientHeight","cordX","clientX","left","cordY","clientY","top","finalX","Math","min","max","clientWidth","finalY","style","concat"],"version":3,"file":"index.8bd891d4.js.map"}